const int analogInPin = A0;double sensorValue = 0.;double offset=0;int x=1;void setup() {  // put your setup code here, to run once:  Serial.begin(9600);   pinMode(2, OUTPUT);  pinMode(3, OUTPUT);    while(x==1)  {    if(analogRead(analogInPin)>600)    {      offset = calibrate(20);      x+=2;    }      }  }double calibrate(int points){  double max [points];  double min [points];    int point=1;  while(point<=points)  {    max[point]=analogRead(analogInPin);    delayMicroseconds(1);        Serial.println("Calibrate");        digitalWrite(3,HIGH);        double read_in_1=analogRead(analogInPin);    delayMicroseconds(1);    double read_in_2=analogRead(analogInPin);    delayMicroseconds(1);    double read_in_3=analogRead(analogInPin);    delayMicroseconds(1);    double read_in_4=analogRead(analogInPin);    delayMicroseconds(1);    double read_in_5=analogRead(analogInPin);    delayMicroseconds(1);        Serial.println(read_in_1);    Serial.println(read_in_2);    Serial.println(read_in_3);    Serial.println(read_in_4);    Serial.println(read_in_5);        while(read_in_1>max[point] || read_in_2>max[point] || read_in_3>max[point] || read_in_4>max[point] || read_in_5>max[point])    {      if(read_in_1>max[point])      {        max[point]=read_in_1;      }      if(read_in_2>max[point])      {        max[point]=read_in_2;      }      if(read_in_3>max[point])      {        max[point]=read_in_3;      }      if(read_in_4>max[point])      {        max[point]=read_in_4;      }      if(read_in_5>max[point])      {        max[point]=read_in_5;      }            read_in_1=analogRead(analogInPin);      delayMicroseconds(1);      read_in_2=analogRead(analogInPin);      delayMicroseconds(1);      read_in_3=analogRead(analogInPin);      delayMicroseconds(1);      read_in_4=analogRead(analogInPin);      delayMicroseconds(1);      read_in_5=analogRead(analogInPin);      delayMicroseconds(1);      Serial.println(read_in_1);      Serial.println(read_in_2);      Serial.println(read_in_3);      Serial.println(read_in_4);      Serial.println(read_in_5);    }        Serial.println(" ");    Serial.println("Calibrate MAX");    Serial.println(max[point]);    Serial.println(" ");        min[point]=max[point];    digitalWrite(3,LOW);    digitalWrite(2,HIGH);        while(read_in_1<min[point] || read_in_2<min[point] || read_in_3<min[point] || read_in_4<min[point] || read_in_5<min[point])    {      if(read_in_1<min[point])      {        min[point]=read_in_1;      }      if(read_in_2<min[point])      {        min[point]=read_in_2;      }      if(read_in_3<min[point])      {        min[point]=read_in_3;      }      if(read_in_4<min[point])      {        min[point]=read_in_4;      }      if(read_in_5<min[point])      {        min[point]=read_in_5;      }            read_in_1=analogRead(analogInPin);      delayMicroseconds(1);      read_in_2=analogRead(analogInPin);      delayMicroseconds(1);      read_in_3=analogRead(analogInPin);      delayMicroseconds(1);      read_in_4=analogRead(analogInPin);      delayMicroseconds(1);      read_in_5=analogRead(analogInPin);      delayMicroseconds(1);      Serial.println(read_in_1);      Serial.println(read_in_2);      Serial.println(read_in_3);      Serial.println(read_in_4);      Serial.println(read_in_5);    }        Serial.println(" ");    Serial.println("Calibrate MIN");        Serial.println(min[point]);    Serial.println(" ");        digitalWrite(2,LOW);    point+=1;  }    digitalWrite(3,HIGH);  digitalWrite(2,HIGH);    double sum_max = 0;  int number = 0;  while(number<points)  {    sum_max+=max[number+1];    number+=1;  }    double sum_min = 0;  number = 0;  while(number<points)  {    sum_min+=min[number+1];    number+=1;  }    sum_max = sum_max/points;  sum_min = sum_min/points;    double middle = ((sum_max-sum_min)/2)+sum_min;    Serial.println("Max");  Serial.println(sum_max);  Serial.println("Min");  Serial.println(sum_min);  Serial.println("Middle");  Serial.println(middle);    return middle;}void loop() {  // put your main code here, to run repeatedly:  sensorValue = ((analogRead(analogInPin)*5.0)/1024)-((offset*5.0)/1024);              Serial.println(sensorValue);}